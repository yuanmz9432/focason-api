AWSTemplateFormatVersion: "2010-09-09"

Description:
  This is vpc cloudformation yml file.

Parameters:
  EnvName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Default: dev

  ProjectPrefix:
    Type: String
    Default: Lemonico

Mappings:
  dev:
    vpc:
      cidr: 10.100.0.0/16
    tgw:
      1a: 10.100.0.0/25
      1c: 10.100.0.128/25
    endpoint:
      1a: 10.100.1.0/25
      1c: 10.100.1.128/25
    nat:
      1a: 10.100.2.0/25
      1c: 10.100.2.128/25

Resources:
  # ------------------------------------------------------------#
  # VPC
  # ------------------------------------------------------------#
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [!Ref EnvName, vpc, cidr]
      EnableDnsSupport: true
      EnableDnsHostnames:  true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-vpc
  # ------------------------------------------------------------#
  # InternetGateway
  # ------------------------------------------------------------#
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-igw
  # ------------------------------------------------------------#
  # VPC â‡„ InternetGateway Attachment
  # ------------------------------------------------------------#
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  # ------------------------------------------------------------#
  # Full Open NACL
  # ------------------------------------------------------------#
  NetworkAclFullOpen:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-full-open-nacl
  # ------------------------------------------------------------#
  # NetworkAclEntry Inbound
  # ------------------------------------------------------------#
  InboundNetworkAclFullOpenEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref NetworkAclFullOpen
      Egress: false  # in-bound
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
  # ------------------------------------------------------------#
  # NetworkAclEntry Outbound
  # ------------------------------------------------------------#
  OutboundNetworkAclFullOpenEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref NetworkAclFullOpen
      Egress: true  # out-bound
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
  # ------------------------------------------------------------#
  # Full Open Route Table
  # ------------------------------------------------------------#
  RouteTableFullOpen:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-full-open-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # Full Open Route
  # ------------------------------------------------------------#
  RouteFullOpen:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableFullOpen
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # ------------------------------------------------------------#
  # Local Only Route Table
  # ------------------------------------------------------------#
  RouteTableLocal:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-local-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # NAT Gateway Subnet 1a
  # ------------------------------------------------------------#
  SubnetNat1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, nat, 1a]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-nat-subnet-1a
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # NAT Gateway Subnet 1c
  # ------------------------------------------------------------#
  SubnetNat1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, nat, 1c]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-nat-subnet-1c
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # Subnet & RouteTable 1a public
  # ------------------------------------------------------------#
  RouteTableAssociationNat1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableFullOpen
      SubnetId: !Ref SubnetNat1a
  # ------------------------------------------------------------#
  # Subnet & RouteTable 1c public
  # ------------------------------------------------------------#
  RouteTableAssociationNat1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableFullOpen
      SubnetId: !Ref SubnetNat1c
  # ------------------------------------------------------------#
  # Subnet & NetworkAcl 1a public
  # ------------------------------------------------------------#
  AclAssociationNat1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetNat1a
  # ------------------------------------------------------------#
  # Subnet & NetworkAcl 1c public
  # ------------------------------------------------------------#
  AclAssociationNat1c:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetNat1c
  # ------------------------------------------------------------#
  # EIP 1a
  # ------------------------------------------------------------#
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-1a-eip
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # EIP 1c
  # ------------------------------------------------------------#
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-1c-eip
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # NatGateway 1a
  # ------------------------------------------------------------#
  NatGateway1a:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref SubnetNat1a
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-1a-ngw
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # NatGateway 1c
  # ------------------------------------------------------------#
  NatGateway1c:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref SubnetNat1c
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-1c-ngw
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # Nat Route Table 1a
  # ------------------------------------------------------------#
  RouteTableNat1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-nat-1a-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # Nat Route Table 1c
  # ------------------------------------------------------------#
  RouteTableNat1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-nat-1c-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # Nat Route 1a
  # ------------------------------------------------------------#
  RouteNat1a:
    Type: AWS::EC2::Route
    DependsOn:
      - NatGateway1a
    Properties:
      RouteTableId: !Ref RouteTableNat1a
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1a
  # ------------------------------------------------------------#
  # Nat Route 1c
  # ------------------------------------------------------------#
  RouteNat1c:
    Type: AWS::EC2::Route
    DependsOn:
      - NatGateway1c
    Properties:
      RouteTableId: !Ref RouteTableNat1c
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1c
  # ------------------------------------------------------------#
  # VpcEndpoint Subnet 1a private
  # ------------------------------------------------------------#
  SubnetVpcEndpoint1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, endpoint, 1a]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-vpcendpoint-subnet-1a
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # VpcEndpoint Subnet 1c private
  # ------------------------------------------------------------#
  SubnetVpcEndpoint1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, endpoint, 1c]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-vpcendpoint-subnet-1c
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # VpcEndpoint RouteTable
  # ------------------------------------------------------------#
  RouteTableVpcEndpoint:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-vpcendpoint-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # VpcEndpoint & RouteTable Association 1a
  # ------------------------------------------------------------#
  RouteTableAssociationVpcEndpoint1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableVpcEndpoint
      SubnetId: !Ref SubnetVpcEndpoint1a
  # ------------------------------------------------------------#
  # VpcEndpoint & RouteTable Association 1c
  # ------------------------------------------------------------#
  RouteTableAssociationVpcEndpoint1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableVpcEndpoint
      SubnetId: !Ref SubnetVpcEndpoint1c
  # ------------------------------------------------------------#
  # VpcEndpoint Subnet & NetworkAcl Association 1a
  # ------------------------------------------------------------#
  AclAssociationVpcEndpoint1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetVpcEndpoint1a
  # ------------------------------------------------------------#
  # VpcEndpoint Subnet & NetworkAcl Association 1c
  # ------------------------------------------------------------#
  AclAssociationVpcEndpoint1c:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetVpcEndpoint1c
  # ------------------------------------------------------------#
  # TGW Subnet 1a private
  # ------------------------------------------------------------#
  SubnetTGW1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, tgw, 1a]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-tgw-subnet-1a
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # TGW Subnet 1c private
  # ------------------------------------------------------------#
  SubnetTGW1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !FindInMap [!Ref EnvName, tgw, 1c]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectPrefix}-tgw-subnet-1c
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # TGW RouteTable
  # ------------------------------------------------------------#
  RouteTableTGW:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub tgw-rtb
        - Key: StackName
          Value: !Ref 'AWS::StackName'
  # ------------------------------------------------------------#
  # TGW Subnet 1a & RouteTable Association
  # ------------------------------------------------------------#
  RouteTableAssociationTGW1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableTGW
      SubnetId: !Ref SubnetTGW1a
  # ------------------------------------------------------------#
  # TGW Subnet 1c & RouteTable Association
  # ------------------------------------------------------------#
  RouteTableAssociationTGW1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableTGW
      SubnetId: !Ref SubnetTGW1c
  # ------------------------------------------------------------#
  # TGW Subnet 1a & NetworkAcl Association
  # ------------------------------------------------------------#
  AclAssociationTGW1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetTGW1a
  # ------------------------------------------------------------#
  # TGW Subnet 1c & NetworkAcl Association
  # ------------------------------------------------------------#
  AclAssociationTGW1c:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAclFullOpen
      SubnetId: !Ref SubnetTGW1c

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectPrefix}-vpc

  InternetGateway:
    Description: A reference to the created InternetGateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub ${ProjectPrefix}-igw

  NetworkAclFullOpen:
    Description: A reference to the Full open NACL
    Value: !Ref NetworkAclFullOpen
    Export:
      Name: !Sub ${ProjectPrefix}-full-open-nacl

  NatGateway1:
    Description: A reference to the created NatGateway in AZ1
    Value: !Ref NatGateway1a
    Export:
      Name: !Sub ${ProjectPrefix}-1a-ngw

  NatGateway2:
    Description: A reference to the created NatGateway in AZ2
    Value: !Ref NatGateway1c
    Export:
      Name: !Sub ${ProjectPrefix}-1c-ngw

  Subnet1aForVpcEndpoint:
    Description: subnet 1a for vpcEndpoint
    Value: !Ref SubnetVpcEndpoint1a
    Export:
      Name: !Sub ${ProjectPrefix}-vpcendpoint-subnet-1a

  Subnet1cForVpcEndpoint:
    Description: subnet 1c for vpcEndpoint
    Value: !Ref SubnetVpcEndpoint1c
    Export:
      Name: !Sub ${ProjectPrefix}-vpcendpoint-subne-1c

  DefaultSecurityGroup:
    Description:  A reference to the Default SecurityGroup
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub ${ProjectPrefix}-default-sg

  RouteTableLocal:
    Description: A reference to the local only route table
    Value: !Ref RouteTableLocal
    Export:
      Name: !Sub ${ProjectPrefix}-local-rtb

  RouteTableFullOpen:
    Description: A reference to the Route table with IGW
    Value: !Ref RouteTableFullOpen
    Export:
      Name: !Sub ${ProjectPrefix}-full-open-rtb

  RouteTableNat1a:
    Description: A reference to the Route table with Nat 1a
    Value: !Ref RouteTableNat1a
    Export:
      Name: !Sub ${ProjectPrefix}-nat-1a-rtb

  RouteTableNat1c:
    Description: A reference to the Route table with Nat 1c
    Value: !Ref RouteTableNat1c
    Export:
      Name: !Sub ${ProjectPrefix}-nat-1c-rtb

  RouteTableVpcEndpoint:
    Description: A reference to the Route table
    Value: !Ref RouteTableVpcEndpoint
    Export:
      Name: !Sub ${ProjectPrefix}-vpcendpoint-rtb

  RouteTableTGW:
    Description: A reference to the Route table
    Value: !Ref RouteTableTGW
    Export:
      Name: !Sub ${ProjectPrefix}-tgw-rtb

  SubnetTGW1a:
    Description: A reference to the Route table
    Value: !Ref SubnetTGW1a
    Export:
      Name: !Sub ${ProjectPrefix}-tgw-subnet-1a

  SubnetTGW1c:
    Description: A reference to the Route table
    Value: !Ref SubnetTGW1c
    Export:
      Name: !Sub ${ProjectPrefix}-tgw-subnet-1c
