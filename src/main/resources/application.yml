# サーバー
server:
  port: ${APP_PORT:8080}
  max-http-header-size: 1024000

# Springフレームワーク
spring:
  main:
    allow-circular-references: true
  profiles:
    active: druid
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_SCHEMA:postgres}?currentSchema=public&stringtype=unspecified&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowMultiQueries=true
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jackson:
    time-zone: GMT+9
  mail:
    host: smtpout.secureserver.net
    username: dummy
    password: dummy
    default-encoding: utf-8
    properties:
      mail:
        smtp:
          ssl:
            trust: dummy
          auth: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB
  jpa:
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: none
    show-sql: false
  mvc:
    servlet:
      path: /api
  freemarker:
    checkTemplateLocation: false

# Page Helper
pagehelper:
  helper-dialect: postgresql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

# Mybatis
mybatis:
  type-aliases-package: jp.co.tfg.prologi.*.bean
  mapper-locations: classpath:mappers/*/*.xml

# JWTトークン
jwt:
  secret: ${APP_SECRET:iWpJnu21sTumTsfyldkfjpo23iiu34tierfjwerjfop43oeorgfsndhfopoewkrjti43orweksdnfjw4e}
  access_token_expires_in: 3600 # 単位：秒
  refresh_token_expires_in: 604800 # 単位：秒
  refresh_token_header: X-REFRESH-TOKEN

# ログ
#logging:
#  config: classpath:logback-boot.xml
#
logging:
  level:
    root: INFO
    org:
      springframework:
        security: DEBUG
        web: INFO
      mybatis: WARN
      apache:
        commons:
          dbcp2: DEBUG

# NP後払い(bizApiHost: https://dummy.sgsystems.co.jp/rest/getxml/)
bizApiHost: ${NP_HOST:dummy}
bizAuthCustomId: ${NP_USERNAME:dummy}
bizAuthCustomPwd: ${NP_PASSWORD:dummy}

# AWS環境に関する配置
cloud:
  aws:
    credentials:
      # アクセスキーID
      accessKey: ${AWS_ACCESS_KEY_ID:dummy}
      # シークレットアクセスキー
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY:dummy}
    region: 'ap-northeast-1'
    s3:
      lemonico-sendbox:
        bucket-name: ${BUCKET_NAME:lemonico-sendbox}
        prefix: /api
        pre-signed-url-valid-minutes: 10080 # 一週間（単位：分）

path:
  root: ${ROOT_PATH:efs}
  image: ${IMAGE_PATH:/static/image/}
  logo: ${LOGO_PATH:/static/logo/}
  store: ${STORE_PATH:/static/store/}
  wms: ${WMS_PATH:/static/warehouse/}
  temporary: ${TEMPORARY_PATH:/static/temporary/}
  order: ${ORDER_PATH:/static/order/}
  ntmOrder: ${NTM_ORDER_PATH:/static/ntm-order/}
  yahoo: ${YAHOO_PATH:/static/yahoo/}

domain: http://pro-logi.com
baseUrl: http://pro-logi.com/store/setting/api_auth
